jobs:
- name: export-om-installation
  serial: true
  plan:
  - aggregate:
    - get: bbr-pipeline-tasks-repo
      trigger: true
  - task: export-om-installation
    file: bbr-pipeline-tasks-repo/tasks/export-om-installation/task.yml
    params:
      SKIP_SSL_VALIDATION: ((skip-ssl-validation))
      OPSMAN_URL: ((opsman-url))
      OPSMAN_USERNAME: ((opsman-username))
      OPSMAN_PASSWORD: ((opsman-password))
  - put: om-backup-artifact
    params:
      file: om-installation/installation-*.zip
  ensure:
    task: cleanup-on-failure
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: sh
        args:
        - -exc
        - |
          rm -rf om-installation/*
      inputs:
      - name: om-installation

- name: bbr-backup-ert
  serial: true
  plan:
  - aggregate:
    - get: bbr-pipeline-tasks-repo
      trigger: true
    - get: bbr-release
      trigger: true
  - task: extract-binary
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundrylondon/bbr-pipeline
          tag: release-candidate
      inputs:
      - name: bbr-release
      outputs:
      - name: binary
      run:
        path: sh
        args:
        - -c
        - |
          tar -xvf bbr-release/bbr*.tar
          cp releases/bbr binary/
  - task: bbr-backup-ert
    file: bbr-pipeline-tasks-repo/tasks/bbr-backup-ert/task.yml
    params:
      SKIP_SSL_VALIDATION: ((skip-ssl-validation))
      OPSMAN_URL: ((opsman-url))
      OPSMAN_USERNAME: ((opsman-username))
      OPSMAN_PASSWORD: ((opsman-password))
  - put: ert-backup-bucket
    params:
      file: ert-backup-artifact/ert-backup-*.tar
  ensure:
    task: cleanup
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: sh
        args:
        - -exc
        - |
          rm -rf ert-backup-artifact/*
      inputs:
      - name: ert-backup-artifact

- name: bbr-backup-director
  serial: true
  plan:
  - aggregate:
    - get: bbr-pipeline-tasks-repo
      trigger: true
    - get: bbr-release
      trigger: true
  - task: extract-binary
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundrylondon/bbr-pipeline
          tag: release-candidate
      inputs:
      - name: bbr-release
      outputs:
      - name: binary
      run:
        path: sh
        args:
        - -c
        - |
          tar -xvf bbr-release/bbr*.tar
          cp releases/bbr binary/
  - task: bbr-backup-director
    file: bbr-pipeline-tasks-repo/tasks/bbr-backup-director/task.yml
    params:
      SKIP_SSL_VALIDATION: ((skip-ssl-validation))
      OPSMAN_URL: ((opsman-url))
      OPSMAN_USERNAME: ((opsman-username))
      OPSMAN_PASSWORD: ((opsman-password))
  - put: director-backup-bucket
    params:
      file: director-backup-artifact/director-backup-*.tar
  ensure:
    task: cleanup
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: sh
        args:
        - -exc
        - |
          rm -rf director-backup-artifact/*
      inputs:
      - name: director-backup-artifact

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: bbr-pipeline-tasks-repo
  type: git
  source:
    uri: https://github.com/rahulkj/bbr-backup-pipeline.git
    branch: master
- name: om-backup-artifact
  type: s3
  source:
    bucket: ((backup-artifact-bucket))
    region_name: ((storage-region))
    endpoint: ((storage-endpoint))
    access_key_id: ((storage-access-key-id))
    secret_access_key: ((storage-secret-access-key))
    disable_ssl: ((disable_ssl))
    skip_ssl_verification: ((skip_ssl_verification))
    use_v2_signing: ((use_v2_signing))
    regex: installation-(.*).zip
- name: ert-backup-bucket
  type: s3
  source:
    bucket: ((backup-artifact-bucket))
    region_name: ((storage-region))
    endpoint: ((storage-endpoint))
    access_key_id: ((storage-access-key-id))
    secret_access_key: ((storage-secret-access-key))
    disable_ssl: ((disable_ssl))
    skip_ssl_verification: ((skip_ssl_verification))
    use_v2_signing: ((use_v2_signing))
    regex: ert-backup-(.*).tar
- name: director-backup-bucket
  type: s3
  source:
    bucket: ((backup-artifact-bucket))
    region_name: ((storage-region))
    endpoint: ((storage-endpoint))
    access_key_id: ((storage-access-key-id))
    secret_access_key: ((storage-secret-access-key))
    disable_ssl: ((disable_ssl))
    skip_ssl_verification: ((skip_ssl_verification))
    use_v2_signing: ((use_v2_signing))
    rege: director-backup-(.*).tar
- name: bbr-release
  type: pivnet
  source:
    api_token: ((pivnet-api-token))
    product_slug: p-bosh-backup-and-restore
    product_version: ((bbr-version))
